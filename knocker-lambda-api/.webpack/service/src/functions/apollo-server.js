(function(e, a) { for(var i in a) e[i] = a[i]; }(exports, /******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/functions/apollo-server.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/db/config.js":
/*!**************************!*\
  !*** ./src/db/config.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("process.env.PLAYER_TABLE = \"knocker-lambda-player-dev\";\n\n//# sourceURL=webpack:///./src/db/config.js?");

/***/ }),

/***/ "./src/db/database.js":
/*!****************************!*\
  !*** ./src/db/database.js ***!
  \****************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return Database; });\n/* harmony import */ var aws_sdk__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aws-sdk */ \"aws-sdk\");\n/* harmony import */ var aws_sdk__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(aws_sdk__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _tables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./tables */ \"./src/db/tables/index.js\");\n\n\n__webpack_require__(/*! ./config */ \"./src/db/config.js\");\n\n\nclass Database {\n  async connect() {\n    //console.log(\"Connect Called\");\n    if (!this._connection) {\n      let params = {}; //console.log(\"__DEV__:\", __DEV__);\n\n      if (true) {\n        params = {\n          apiVersion: \"2012-08-10\",\n          endpoint: process.env.DB_URL,\n          region: \"local\",\n          accessKeyId: \"local\",\n          secretAccessKey: \"local\"\n        };\n      } else {}\n\n      this._connection = new aws_sdk__WEBPACK_IMPORTED_MODULE_0___default.a.DynamoDB.DocumentClient(params);\n    }\n\n    return this._connection;\n  }\n\n  async query(params) {\n    return new Promise((resolve, reject) => {\n      this._connection.query(params, (err, data) => {\n        if (err) {\n          reject(err);\n        } else {\n          //console.log(\"database.js - get()\", data);\n          //console.log(\"database.js - get(): Items\", data.Items);\n          return data;\n        }\n      });\n    });\n  }\n\n  async get() {\n    var params = {\n      TableName: process.env.PLAYER_TABLE\n    };\n    return new Promise((resolve, reject) => {\n      this._connection.scan(params, (err, data) => {\n        if (err) {\n          reject(err);\n        } else {\n          //console.log(\"database.js - get()\", data);\n          //console.log(\"database.js - get(): Items\", data.Items);\n          resolve(this.createPlayers(data.Items));\n        }\n      });\n    });\n  }\n\n  async putItem(params) {\n    //console.log(\"database.js - putItem\");\n    return new Promise((resolve, reject) => {\n      this._connection.put(params, (err, data) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n\n  async getItem(params) {\n    return new Promise((resolve, reject) => {\n      this._connection.getItem(params, (err, data) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n\n  async update(params) {\n    return new Promise((resolve, reject) => {\n      this._connection.update(params, (err, data) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n\n  async updateItem(params) {\n    return new Promise((resolve, reject) => {\n      this._connection.updateItem(params, (err, data) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n\n  async scan(params = {}) {\n    return new Promise((resolve, reject) => {\n      this._connection.scan(params, (err, data) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n\n  async deleteItem(params) {\n    return new Promise((resolve, reject) => {\n      this._connection.deleteItem(params, (err, data) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(data);\n        }\n      });\n    });\n  }\n\n  async checkTables() {\n    this._connection.listTables({}, function (err, data) {\n      if (err) {//console.log(err);\n        // an error occurred\n      } else {\n        console.log(data);\n      } //console.log(\"checkTables results: \", data); // successful response\n\n    });\n  }\n\n  async createTables(tables) {\n    for (let k = 0; k < tables.length; k++) {\n      const table = tables[k];\n      await new Promise((resolve, reject) => {\n        this._connection.createTable(table, err => {\n          if (err) {\n            if (err.code !== \"ResourceInUseException\") {\n              console.dir(err);\n              reject(err);\n            } else {\n              console.dir(`Table \"${table.TableName}\" exists`);\n              resolve();\n            }\n          } else {\n            console.dir(`Created table \"${table.TableName}\"`);\n            resolve();\n          }\n        });\n      });\n    }\n  }\n  /**\n   * \n   * atabase.js - get(): Items [\n  knocker-lambda-api_1  |   {\n  knocker-lambda-api_1  |     machinesPlayed: { L: [] },\n  knocker-lambda-api_1  |     scores: { L: [] },\n  knocker-lambda-api_1  |     name: { S: 'zxcvnghn' },\n  knocker-lambda-api_1  |     locationsVisited: { L: [] },\n  knocker-lambda-api_1  |     id: { S: '5eedb0709bce5f9a840ae3b2439088b941ba23d9' },\n  knocker-lambda-api_1  |     email: { S: 'nbbvnv' },\n  knocker-lambda-api_1  |     username: { S: 'sdfsf' }\n  knocker-lambda-api_1  |   }\n   * \n   * \n   * @param {\n    * } playersFromDB \n    */\n\n\n  createPlayers(playersFromDB) {\n    let playerArr = [];\n    playersFromDB.forEach(player => {\n      playerArr.push({\n        machinesPlayed: player.machinesPlayed.L,\n        scores: player.scores.L,\n        name: player.name.S,\n        locationsVisited: player.locationsVisited.L,\n        id: player.id.S,\n        email: player.email.S,\n        username: player.username.S\n      });\n    }); //console.log(playerArr);\n\n    return playerArr;\n  }\n\n}\n\n//# sourceURL=webpack:///./src/db/database.js?");

/***/ }),

/***/ "./src/db/tables/index.js":
/*!********************************!*\
  !*** ./src/db/tables/index.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./player */ \"./src/db/tables/player.js\");\n/* harmony import */ var _score__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./score */ \"./src/db/tables/score.js\");\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ([_player__WEBPACK_IMPORTED_MODULE_0__[\"default\"]]);\n\n//# sourceURL=webpack:///./src/db/tables/index.js?");

/***/ }),

/***/ "./src/db/tables/player.js":
/*!*********************************!*\
  !*** ./src/db/tables/player.js ***!
  \*********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  TableName: process.env.PLAYER_TABLE,\n  KeySchema: [{\n    AttributeName: \"id\",\n    KeyType: \"HASH\"\n  }],\n  AttributeDefinitions: [{\n    AttributeName: \"id\",\n    AttributeType: \"S\"\n  }],\n  ProvisionedThroughput: {\n    ReadCapacityUnits: 5,\n    WriteCapacityUnits: 5\n  }\n});\n\n//# sourceURL=webpack:///./src/db/tables/player.js?");

/***/ }),

/***/ "./src/db/tables/score.js":
/*!********************************!*\
  !*** ./src/db/tables/score.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  TableName: \"score\",\n  KeySchema: [{\n    AttributeName: \"id\",\n    KeyType: \"HASH\"\n  }],\n  AttributeDefinitions: [{\n    AttributeName: \"id\",\n    AttributeType: \"S\"\n  }],\n  ProvisionedThroughput: {\n    ReadCapacityUnits: 5,\n    WriteCapacityUnits: 5\n  }\n});\n\n//# sourceURL=webpack:///./src/db/tables/score.js?");

/***/ }),

/***/ "./src/functions/apollo-server.js":
/*!****************************************!*\
  !*** ./src/functions/apollo-server.js ***!
  \****************************************/
/*! exports provided: main */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./index.js */ \"./src/functions/index.js\");\n/* harmony reexport (safe) */ __webpack_require__.d(__webpack_exports__, \"main\", function() { return _index_js__WEBPACK_IMPORTED_MODULE_0__[\"default\"]; });\n\n\n\n//# sourceURL=webpack:///./src/functions/apollo-server.js?");

/***/ }),

/***/ "./src/functions/index.js":
/*!********************************!*\
  !*** ./src/functions/index.js ***!
  \********************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var apollo_server_lambda__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! apollo-server-lambda */ \"apollo-server-lambda\");\n/* harmony import */ var apollo_server_lambda__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(apollo_server_lambda__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _graphql_resolvers__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../graphql/resolvers */ \"./src/graphql/resolvers/index.js\");\n/* harmony import */ var _graphql_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../graphql/types */ \"./src/graphql/types/index.js\");\n/* harmony import */ var _graphql_data_sources_pinball__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../graphql/data-sources/pinball */ \"./src/graphql/data-sources/pinball.js\");\n/* harmony import */ var _graphql_data_sources_knocker_db__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../graphql/data-sources/knocker-db */ \"./src/graphql/data-sources/knocker-db.js\");\n\n\n\n\n // set up any dataSources our resolvers need\n\nconst dataSources = () => ({\n  pinballMachineAPI: new _graphql_data_sources_pinball__WEBPACK_IMPORTED_MODULE_3__[\"PinballMachineAPI\"](),\n  knockerDB: new _graphql_data_sources_knocker_db__WEBPACK_IMPORTED_MODULE_4__[\"default\"]()\n}); // Set up Apollo Server\n\n\nconst server = new apollo_server_lambda__WEBPACK_IMPORTED_MODULE_0__[\"ApolloServer\"]({\n  typeDefs: _graphql_types__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n  resolvers: _graphql_resolvers__WEBPACK_IMPORTED_MODULE_1__[\"default\"],\n  formatError: error => {\n    //console.log(error);\n    return error;\n  },\n  formatResponse: response => {\n    //console.log(response);\n    return response;\n  },\n  // initial context state, will be available in resolvers\n  context: ({\n    event,\n    context\n  }) => ({\n    headers: event.headers,\n    functionName: context.functionName,\n    event,\n    context\n  }),\n  //dataSources,\n  //introspection: true,\n  //playground: true,\n  // an object that goes to the \"context\" argument\n  // when executing resolvers\n  dataSources: () => {\n    return {\n      pinballMachineAPI: new _graphql_data_sources_pinball__WEBPACK_IMPORTED_MODULE_3__[\"PinballMachineAPI\"](),\n      knockerDB: new _graphql_data_sources_knocker_db__WEBPACK_IMPORTED_MODULE_4__[\"default\"]()\n    };\n  }\n});\nconst handler = server.createHandler({\n  cors: {\n    origin: \"*\",\n    credentials: true\n  }\n});\n/* const handler = (event, context, callback) => {\n  // tell AWS lambda we do not want to wait for NodeJS event loop\n  // to be empty in order to send the response\n  context.callbackWaitsForEmptyEventLoop = false;\n\n  // process the request\n  return handler(event, context, callback);\n}; */\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (handler);\n\n//# sourceURL=webpack:///./src/functions/index.js?");

/***/ }),

/***/ "./src/graphql/data-sources/knocker-db.js":
/*!************************************************!*\
  !*** ./src/graphql/data-sources/knocker-db.js ***!
  \************************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"default\", function() { return KnockerDB; });\n/* harmony import */ var _db_database__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../db/database */ \"./src/db/database.js\");\n/* harmony import */ var crypto_random_string__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! crypto-random-string */ \"crypto-random-string\");\n/* harmony import */ var crypto_random_string__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(crypto_random_string__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _db_tables_score__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../db/tables/score */ \"./src/db/tables/score.js\");\n\n\n\n\nconst cryptoRandomString = __webpack_require__(/*! crypto-random-string */ \"crypto-random-string\");\n\nconst crypto = __webpack_require__(/*! crypto */ \"crypto\");\n\nconst {\n  v4\n} = __webpack_require__(/*! uuid */ \"uuid\");\n\nvar moment = __webpack_require__(/*! moment */ \"moment\"); // require\n\n\nconst userReducer = __webpack_require__(/*! ../reducers/user */ \"./src/graphql/reducers/user.js\");\n\nclass KnockerDB {\n  constructor() {} // our methods go here, we are going to discuss them below\n\n  /**\n   *\n   * ---------------------------------------------\n   *                   Writes\n   * ---------------------------------------------\n   *\n   */\n\n\n  async put(data) {\n    const paramsData = data;\n    const item = {\n      id: \"2\",\n      createdAt: new Date().getTime(),\n      username: data.username.toString(),\n      email: data.email.toString(),\n      name: data.name.toString(),\n      locationsVisited: [],\n      machinesPlayed: [],\n      scores: []\n    };\n    const db = await this.getDatabase();\n    /* await db.putItem({\n     TableName: process.env.PLAYER_TABLE,\n      Item: item,\n    }); */\n    //return item;\n    //console.log(\"item: \", item);\n\n    await db.putItem({\n      TableName: process.env.PLAYER_TABLE,\n      Item: item,\n      ReturnValues: \"NONE\"\n    }).then(function (data, err) {\n      if (err) {//console.log(err, err.stack);\n      } else {\n        //console.log(\"update putItem() Response: \", paramsData);\n        return paramsData;\n      }\n    });\n    return item;\n  }\n\n  async addRole(role, userId, username) {\n    var hashString = \"ROLE#\" + userId;\n    const roleUserHash = crypto.createHash(\"md5\").update(hashString).digest(\"hex\");\n    var params = {\n      TableName: process.env.PLAYER_TABLE,\n      Key: {\n        // The primary key of the item (a map of attribute name to AttributeValue)\n        PK: roleUserHash,\n        //(string | number | boolean | null | Binary)\n        SK: role // more attributes...\n\n      },\n      UpdateExpression: \"SET #Data = :Data, #Date = :Date\",\n      ConditionExpression: \"Not contains(SK,:SK)\",\n      // optional String describing the constraint to be placed on an attribute\n      ExpressionAttributeNames: {\n        // a map of substitutions for attribute names with special characters\n        \"#Data\": \"Data\",\n        \"#Date\": \"Date\"\n      },\n      ExpressionAttributeValues: {\n        // a map of substitutions for all attribute values\n        \":SK\": role,\n        \":Data\": username,\n        \":Date\": moment().format(\"YYYY-MM-DD\")\n      },\n      ReturnValues: \"UPDATED_NEW\"\n    };\n    const db = await this.getDatabase();\n    return db.update(params).then(function (data, err) {\n      if (err) {//console.log(err, err.stack);\n      } else {\n        //console.log(\"update createScore() Response: \", paramsData);\n        console.log(\"data\", data);\n      }\n    });\n  }\n\n  async addFriend(friendUserName, friendUid, userId) {\n    const SK = \"FRIEND#\" + friendUid;\n    var params = {\n      TableName: process.env.PLAYER_TABLE,\n      Key: {\n        PK: userId,\n        //(string | number | boolean | null | Binary)\n        SK: SK\n      },\n      UpdateExpression: \"set #data = :data, #date = :date\",\n      // String representation of the update\n      ConditionExpression: \"Not contains(SK,:sk)\",\n      // Checks if SK contains :sk value ? ConditionalCheckFailedException : Add Item\n      ExpressionAttributeNames: {\n        // a map of substitutions for attribute names with special character\n        \"#data\": \"Data\",\n        \"#date\": \"Date\"\n      },\n      ExpressionAttributeValues: {\n        // a map of substitutions for all attribute values\n        \":sk\": SK,\n        \":data\": friendUserName,\n        \":date\": moment().format(\"YYYY-MM-DD\")\n      },\n      ReturnValues: \"UPDATED_NEW\"\n    };\n    const db = await this.getDatabase();\n    return db.update(params).then(function (data, err) {\n      if (err) {//console.log(err, err.stack);\n      } else {\n        //console.log(\"update createScore() Response: \", paramsData);\n        console.log(\"data\", data);\n      }\n    });\n  }\n\n  async addFavoriteGame(gameId, username, userId) {\n    const SK = \"FAVORITE#GAME#\" + gameId;\n    var params = {\n      TableName: process.env.PLAYER_TABLE,\n      Key: {\n        PK: userId,\n        //(string | number | boolean | null | Binary)\n        SK: SK\n      },\n      UpdateExpression: \"set #data = :data, #date = :date\",\n      // String representation of the update\n      ConditionExpression: \"Not contains(SK,:sk)\",\n      // Checks if SK contains :sk value ? ConditionalCheckFailedException : Add Item\n      ExpressionAttributeNames: {\n        // a map of substitutions for attribute names with special character\n        \"#data\": \"Data\",\n        \"#date\": \"Date\"\n      },\n      ExpressionAttributeValues: {\n        // a map of substitutions for all attribute values\n        \":sk\": SK,\n        \":data\": username,\n        \":date\": moment().format(\"YYYY-MM-DD\")\n      },\n      ReturnValues: \"UPDATED_NEW\"\n    };\n    const db = await this.getDatabase();\n    return db.update(params).then(function (data, err) {\n      if (err) {//console.log(err, err.stack);\n      } else {\n        //console.log(\"update createScore() Response: \", paramsData);\n        console.log(\"data\", data);\n      }\n    });\n  }\n\n  async addFavoriteMachine(locationMachineXrefId, username, userId) {\n    const SK = \"FAVORITE#MACHINE#\" + locationMachineXrefId;\n    var params = {\n      TableName: process.env.PLAYER_TABLE,\n      Key: {\n        PK: userId,\n        //(string | number | boolean | null | Binary)\n        SK: SK\n      },\n      UpdateExpression: \"set #data = :data, #date = :date\",\n      // String representation of the update\n      ConditionExpression: \"Not contains(SK,:sk)\",\n      // Checks if SK contains :sk value ? ConditionalCheckFailedException : Add Item\n      ExpressionAttributeNames: {\n        // a map of substitutions for attribute names with special character\n        \"#data\": \"Data\",\n        \"#date\": \"Date\"\n      },\n      ExpressionAttributeValues: {\n        // a map of substitutions for all attribute values\n        \":sk\": SK,\n        \":data\": username,\n        \":date\": moment().format(\"YYYY-MM-DD\")\n      },\n      ReturnValues: \"UPDATED_NEW\"\n    };\n    const db = await this.getDatabase();\n    return db.update(params).then(function (data, err) {\n      if (err) {//console.log(err, err.stack);\n      } else {\n        //console.log(\"update createScore() Response: \", paramsData);\n        console.log(\"data\", data);\n      }\n    });\n  }\n\n  async addPlayedMachine(locationMachineXrefId, username) {\n    const epoch = moment().format(\"X\");\n    const SK = \"MACHINE#\" + locationMachineXrefId + \"#\" + epoch;\n    var params = {\n      TableName: process.env.PLAYER_TABLE,\n      Key: {\n        PK: \"666\",\n        //(string | number | boolean | null | Binary)\n        SK: SK\n      },\n      UpdateExpression: \"set #data = :data, #date = :date\",\n      // String representation of the update\n      ConditionExpression: \"Not contains(SK,:sk)\",\n      // Checks if SK contains :sk value ? ConditionalCheckFailedException : Add Item\n      ExpressionAttributeNames: {\n        // a map of substitutions for attribute names with special character\n        \"#data\": \"Data\",\n        \"#date\": \"Date\"\n      },\n      ExpressionAttributeValues: {\n        // a map of substitutions for all attribute values\n        \":sk\": SK,\n        \":data\": username,\n        \":date\": moment().format(\"YYYY-MM-DD\")\n      },\n      ReturnValues: \"UPDATED_NEW\"\n    };\n    const db = await this.getDatabase();\n    return db.update(params).then(function (data, err) {\n      if (err) {//console.log(err, err.stack);\n      } else {\n        //console.log(\"update createScore() Response: \", paramsData);\n        console.log(\"data\", data);\n      }\n    });\n  }\n\n  async addVisitedLocation(locationId, username, uid) {\n    const epoch = moment().format(\"X\");\n    const SK = \"LOCATION#\" + locationId + \"#\" + epoch;\n    var params = {\n      TableName: process.env.PLAYER_TABLE,\n      Key: {\n        PK: uid,\n        //(string | number | boolean | null | Binary)\n        SK: SK\n      },\n      UpdateExpression: \"set #data = :data, #date = :date\",\n      // String representation of the update\n      ConditionExpression: \"Not contains(SK,:sk)\",\n      // Checks if SK contains :sk value ? ConditionalCheckFailedException : Add Item\n      ExpressionAttributeNames: {\n        // a map of substitutions for attribute names with special character\n        \"#data\": \"Data\",\n        \"#date\": \"Date\"\n      },\n      ExpressionAttributeValues: {\n        // a map of substitutions for all attribute values\n        \":sk\": SK,\n        \":data\": username,\n        \":date\": moment().format(\"YYYY-MM-DD\")\n      },\n      ReturnValues: \"UPDATED_NEW\"\n    };\n    const db = await this.getDatabase();\n    return db.update(params).then(function (data, err) {\n      if (err) {//console.log(err, err.stack);\n      } else {\n        //console.log(\"update createScore() Response: \", paramsData);\n        console.log(\"data\", data);\n      }\n    });\n  }\n\n  async createScore(score, gameId, locationId, locationMachineXrefId, username, userId) {\n    const epoch = moment().format(\"X\");\n    const scoreString = \"SCORE#\" + gameId;\n    const PK = crypto.createHash(\"md5\").update(scoreString).digest(\"hex\");\n    const SK = \"SCORE#\" + userId + \"#\" + epoch;\n    var params = {\n      TableName: process.env.PLAYER_TABLE,\n      Key: {\n        PK: PK,\n        //(string | number | boolean | null | Binary)\n        SK: SK // more attributes...\n\n      },\n      UpdateExpression: \"SET #Data = :Data, #Score = :Score, #Date = :Date, #LocationId = :LocationId, #LocationMachineXrefId =:LocationMachineXrefId\",\n      ConditionExpression: \"Not contains(SK,:SK)\",\n      // optional String describing the constraint to be placed on an attribute\n      ExpressionAttributeNames: {\n        // a map of substitutions for attribute names with special characters\n        \"#Data\": \"Data\",\n        \"#Score\": \"Score\",\n        \"#Date\": \"Date\",\n        \"#LocationId\": \"LocationId\",\n        \"#LocationMachineXrefId\": \"LocationMachineXrefId\"\n      },\n      ExpressionAttributeValues: {\n        // a map of substitutions for all attribute values\n        \":SK\": SK,\n        \":Data\": username,\n        \":Score\": score,\n        \":Date\": moment().format(\"YYYY-MM-DD\"),\n        \":LocationId\": locationId,\n        \":LocationMachineXrefId\": locationMachineXrefId\n      },\n      ReturnValues: \"UPDATED_NEW\"\n    };\n    const db = await this.getDatabase();\n    return db.update(params).then(function (data, err) {\n      if (err) {//console.log(err, err.stack);\n      } else {\n        //console.log(\"update createScore() Response: \", paramsData);\n        console.log(\"data\", data);\n      }\n    });\n  }\n  /**\n   *\n   * ---------------------------------------------\n   *                   Queries\n   * ---------------------------------------------\n   *\n   */\n\n\n  async get() {\n    const db = await this.getDatabase(); //console.log(\"knocker-db.js - get()\");\n\n    return db.get({\n      TableName: process.env.PLAYER_TABLE,\n      Key: {\n        HashKey: \"hashkey\"\n      }\n    });\n  }\n  /**\n   *\n   * This function needs to be updated to return lists of Locations, Machines Played Favorite Machines, Favorite Games, Friends\n   *\n   * @param {*} id\n   */\n\n\n  async getUserById(id) {\n    const db = await this.getDatabase();\n    const params = {\n      TableName: process.env.PLAYER_TABLE,\n      KeyConditionExpression: \"PK = :PK \",\n      ExpressionAttributeValues: {\n        \":PK\": id\n      }\n    };\n    return docClient.query(params, function (err, data) {\n      if (err) console.log(err); // an error occurred\n      else return userReducer.reduce(data); // successful response\n    }); // successful response}\n  }\n  /**\n   *\n   * This function needs to be updated to return list of Locations, Machines Played, Scores\n   *\n   * @param {*} username\n   */\n\n\n  async getUserByUsername(username) {\n    const params = {\n      TableName: process.env.PLAYER_TABLE,\n      IndexName: \"DataGSI\",\n      KeyConditionExpression: \"#Data = :Data\",\n      ExpressionAttributeNames: {\n        \"#Data\": \"Data\"\n      },\n      ExpressionAttributeValues: {\n        \":Data\": username\n      }\n    };\n    const db = await this.getDatabase();\n    return db.query(function (err, data) {\n      if (err) console.log(err); // an error occurred\n      else return userReducer.reduce(data); // successful response\n    });\n  }\n\n  async getUserRolesById(id) {\n    const roleUserHash = crypto.createHash(\"md5\").update(\"ROLE#\" + id).digest(\"hex\");\n    console.log(roleUserHash);\n    const db = await this.getDatabase();\n    return db.query({\n      TableName: process.env.PLAYER_TABLE,\n      KeyConditionExpression: \"PK = :PK\",\n      ExpressionAttributeValues: {\n        \":PK\": roleHash\n      }\n    });\n  }\n\n  async getUsersByRole(role) {\n    return db.query({\n      TableName: process.env.PLAYER_TABLE,\n      IndexName: \"SKGSI\",\n      KeyConditionExpression: \"SK = :SK\",\n      ExpressionAttributeValues: {\n        \":SK\": role\n      }\n    });\n  }\n\n  async getUserScores(username, uid) {\n    const db = await this.getDatabase();\n    return db.query({\n      TableName: process.env.PLAYER_TABLE,\n      IndexName: \"DataGSI\",\n      KeyConditionExpression: \"#Data = :Data AND begins_with(SK,:SK)\",\n      ExpressionAttributeNames: {\n        \"#Data\": \"Data\"\n      },\n      ExpressionAttributeValues: {\n        \":Data\": username,\n        \":SK\": \"SCORE\"\n      }\n    });\n  }\n\n  async getUserScoresByGameId(username, uid, gameId) {\n    const db = await this.getDatabase();\n    return db.query({\n      TableName: process.env.PLAYER_TABLE,\n      IndexName: \"DataGSI\",\n      KeyConditionExpression: \"#Data = :Data AND begins_with(SK,:SK)\",\n      ExpressionAttributeNames: {\n        \"#Data\": \"Data\"\n      },\n      ExpressionAttributeValues: {\n        \":Data\": username,\n        \":SK\": \"SCORE#\" + uid + \"#\" + gameId\n      }\n    });\n  }\n  /**\n   *\n   * @param {*} gameId\n   */\n\n\n  async getScoresByGameId(gameId) {\n    const gameScoreHash = crypto.createHash(\"md5\").update(\"SCORE#\" + gameId).digest(\"hex\");\n    console.log(gameScoreHash);\n    const db = await this.getDatabase();\n    return db.query({\n      TableName: process.env.PLAYER_TABLE,\n      KeyConditionExpression: \"PK = :PK \",\n      ExpressionAttributeValues: {\n        \":PK\": gameScoreHash\n      }\n    });\n  }\n\n  async getKnockerScoresByLocationMachineId(locMachId) {\n    var params = {\n      TableName: process.env.PLAYER_TABLE,\n      IndexName: \"LocationMachineXrefIdGSI\",\n      KeyConditionExpression: \"LocationMachineXrefId = :LocationMachineXrefId\",\n      ExpressionAttributeValues: {\n        \":LocationMachineXrefId\": locMachId\n      }\n    };\n    return docClient.query(params, function (err, data) {\n      if (err) console.log(err); // an error occurred\n      else return data; // successful response\n    });\n  }\n\n  async getEventsByDate(date) {\n    var params = {\n      TableName: process.env.PLAYER_TABLE,\n      IndexName: \"DateGSI\",\n      KeyConditionExpression: \"#Date = :Date\",\n      ExpressionAttributeNames: {\n        \"#Date\": \"Date\"\n      },\n      ExpressionAttributeValues: {\n        \":Date\": moment(date).format(\"YYYY-MM-DD\")\n      }\n    };\n    return docClient.query(params, function (err, data) {\n      if (err) console.log(err); // an error occurred\n      else return data; // successful response\n    });\n  }\n\n  async delete(id) {\n    const db = await this.getDatabase();\n    await db.deleteItem({\n      TableName: process.env.PLAYER_TABLE,\n      Key: {\n        id: {\n          S: id.toString()\n        }\n      }\n    });\n  }\n\n  async getDatabase() {\n    if (!this._db) {\n      //console.log(\"db created\");\n      this._db = new _db_database__WEBPACK_IMPORTED_MODULE_0__[\"default\"]();\n      await this._db.connect();\n    }\n\n    return this._db;\n  }\n\n}\n\n//# sourceURL=webpack:///./src/graphql/data-sources/knocker-db.js?");

/***/ }),

/***/ "./src/graphql/data-sources/pinball.js":
/*!*********************************************!*\
  !*** ./src/graphql/data-sources/pinball.js ***!
  \*********************************************/
/*! exports provided: PinballMachineAPI */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"PinballMachineAPI\", function() { return PinballMachineAPI; });\n/* harmony import */ var apollo_datasource_rest__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! apollo-datasource-rest */ \"apollo-datasource-rest\");\n/* harmony import */ var apollo_datasource_rest__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(apollo_datasource_rest__WEBPACK_IMPORTED_MODULE_0__);\n\nclass PinballMachineAPI extends apollo_datasource_rest__WEBPACK_IMPORTED_MODULE_0__[\"RESTDataSource\"] {\n  constructor() {\n    super();\n    this.baseURL = \"https://pinballmap.com/api/v1\";\n  } // leaving this inside the class to make the class easier to test\n\n\n  pinballMachineReducer(pin) {\n    return {\n      id: pin.id,\n      name: pin.name,\n      is_active: pin.is_active,\n      created_at: pin.created_at,\n      updated_at: pin.updated_at,\n      ipdb_link: pin.ipdb_link,\n      year: pin.year,\n      manufacturer: pin.manufacturer,\n      machine_group_id: pin.machine_group_id,\n      ipdb_id: pin.ipdb_id,\n      opdb_id: pin.opdb_id\n    };\n  }\n\n  regionReducer(reg) {\n    return {\n      id: reg.id,\n      name: reg.name,\n      created_at: reg.created_at,\n      updated_at: reg.updated_at,\n      full_name: reg.full_name,\n      motd: reg.motd,\n      lat: reg.lat,\n      lon: reg.lon,\n      state: reg.state,\n      effective_radius: reg.effective_radius\n    };\n  }\n\n  locationReducer(loc) {\n    return {\n      id: loc.id,\n      name: loc.name,\n      street: loc.street,\n      city: loc.city,\n      state: loc.state,\n      zip: loc.zip,\n      phone: loc.phone,\n      lat: loc.lat,\n      lon: loc.lon,\n      website: loc.website,\n      created_at: loc.created_at,\n      updated_at: loc.updated_at,\n      zone_id: loc.zone_id,\n      region_id: loc.region_id,\n      location_type_id: loc.location_type_id,\n      description: loc.description,\n      operator_id: loc.operator_id,\n      date_last_updated: loc.date_last_updated,\n      last_updated_by_user_id: loc.last_updated_by_user_id,\n      is_stern_army: loc.is_stern_army,\n      country: loc.country,\n      num_machines: loc.num_machines,\n      location_machine_xrefs: loc.location_machine_xrefs\n    };\n  }\n\n  scoreReducer(hs) {\n    return {\n      id: hs.id,\n      location_machine_xref_id: hs.location_machine_xref_id,\n      score: hs.score,\n      created_at: hs.created_at,\n      updated_at: hs.updated_at,\n      user_id: hs.user_id,\n      username: hs.username\n    };\n  }\n\n  operatorReducer(op) {\n    return {\n      id: op.id,\n      name: op.name,\n      region_id: op.region_id,\n      email: op.email,\n      website: op.website,\n      phone: op.phone,\n      created_at: op.created_at,\n      updated_at: op.updated_at\n    };\n  }\n  /**\n   *\n   * Note: getMachineById is not neccessary if the whole list is loaded into the app\n   */\n\n\n  async getAllMachines() {\n    const response = await this.get(`/machines.json`); // transform the raw launches to a more friendly\n\n    let returnArray = [];\n\n    if (response) {\n      response[\"machines\"].forEach(element => {\n        ////console.log(\"test\", element);\n        returnArray.push(this.pinballMachineReducer(element));\n      });\n      return returnArray;\n    }\n    /*  Array.isArray(response)\n      ? response.map(machine => this.pinballMachineReducer(machine))\n      : []; */\n\n  }\n\n  async getAllOperators() {\n    const response = await this.get(`/machines.json`); // transform the raw launches to a more friendly\n\n    return Array.isArray(response) ? response.map(op => this.operatorReducer(op)) : [];\n  }\n\n  async getAllRegions() {\n    const response = await this.get(`/regions`);\n    let returnArray = [];\n\n    if (response) {\n      response[\"regions\"].forEach(element => {\n        ////console.log(\"test\", element);\n        returnArray.push(this.regionReducer(element));\n      });\n      return returnArray;\n    } //https://pinballmap.com/api/v1/regions\n\n  }\n\n  async getLocations({\n    region\n  }) {\n    const response = await this.get(\"/locations\", {\n      region: region\n    });\n    let returnArray = [];\n\n    if (response) {\n      response[\"locations\"].forEach(element => {\n        ////console.log(\"test\", element);\n        returnArray.push(this.locationReducer(element));\n      });\n      return returnArray;\n    }\n    /* https://pinballmap.com/api/v1/locations?region=ca-central \n      the region is required: its a string\n      */\n\n  }\n\n  async getLocationsByRegion({\n    region\n  }) {\n    const response = await this.get(\"/region/\" + region + \"/locations\");\n    let returnArray = [];\n\n    if (response) {\n      response[\"locations\"].forEach(element => {\n        ////console.log(\"test\", element);\n        returnArray.push(this.locationReducer(element));\n      });\n      return returnArray;\n    } //https://pinballmap.com/api/v1/region/ca-central/locations\n\n  }\n\n  async getLocationsClosestByAddress() {\n    /* http://pinballmap.com/api/v1/locations/closest_by_address.json?send_all_within_distance=true;no_details=1;manufacturer=Stern;address=20009;max_distance=50 */\n    //The Address is a zipcode, the most important field\n  }\n\n  async getPMScoresByLocationMachineId({\n    locMachId\n  }) {\n    /*  https://pinballmap.com/api/v1/machine_score_xrefs/3467\n      id:3467 */\n    const response = await this.get(\"/machine_score_xrefs/\" + locMachId);\n    let returnArray = [];\n\n    if (response) {\n      response[\"machine_scores\"].forEach(element => {\n        ////console.log(\"test\", element);\n        returnArray.push(this.scoreReducer(element));\n      });\n      return returnArray;\n    }\n  }\n  /*   async getLaunchById({ launchId }) {\n      const res = await this.get(\"launches\", { flight_number: launchId });\n      return this.launchReducer(res[0]);\n    }\n    async getLaunchesByIds({ launchIds }) {\n      return Promise.all(\n        launchIds.map(launchId => this.getLaunchById({ launchId }))\n      );\n    } */\n\n\n}\n\n//# sourceURL=webpack:///./src/graphql/data-sources/pinball.js?");

/***/ }),

/***/ "./src/graphql/index.js":
/*!******************************!*\
  !*** ./src/graphql/index.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("const ROLES = [\"ADMIN\", \"PLAYER\", \"VERIFIER\"];\nexports.ROLES = ROLES;\n\n//# sourceURL=webpack:///./src/graphql/index.js?");

/***/ }),

/***/ "./src/graphql/reducers/user.js":
/*!**************************************!*\
  !*** ./src/graphql/reducers/user.js ***!
  \**************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

eval("const ROLES = __webpack_require__(/*! ../index */ \"./src/graphql/index.js\");\n/**\n * Converts records into users\n *\n * @param {*} data\n */\n\n\nreduce = data => {\n  const items = data.Items;\n  var user = {};\n\n  if (element.SK.startsWith(\"USER\")) {\n    user.username = element.Data;\n    user.name = element.Name;\n    user.location = element.Location;\n    user.email = element.Email;\n  } else if (element.SK.startsWith(\"FAVORITE#GAME\")) {\n    if (user.favoriteGames === undefined) {\n      user.favoriteGames = [];\n    }\n\n    user.favoriteGames = [...user.favoriteGames, {\n      gameId: +element.SK.split(\"FAVORITE#GAME#\")[1],\n      dateAdded: element.Date\n    }];\n  } else if (element.SK.startsWith(\"FAVORITE#MACHINE\")) {\n    if (user.favoriteMachines === undefined) {\n      user.favoriteMachines = [];\n    }\n\n    user.favoriteMachines = [...user.favoriteMachines, {\n      machineId: +element.SK.split(\"FAVORITE#MACHINE#\")[1],\n      dateAdded: element.Date\n    }];\n  } else if (element.SK.startsWith(\"FRIEND\")) {\n    if (user.friends === undefined) {\n      user.friends = [];\n    }\n\n    user.friends = [...user.friends, {\n      id: +element.SK.split(\"FRIEND#\")[1],\n      username: element.Data,\n      dateAdded: element.Date\n    }];\n  } else if (element.SK.startsWith(\"LOCATION\")) {\n    if (user.vistedLocations === undefined) {\n      user.vistedLocations = [];\n    } else {\n      user.vistedLocations = [...user.vistedLocations, {\n        locationMachineXrefId: +element.SK.split(\"#\")[1],\n        dateVisted: element.Date\n      }];\n    }\n  } else if (element.SK.startsWith(\"MACHINE\")) {\n    if (user.playedMachines === undefined) {\n      user.playedMachines = [];\n    }\n\n    user.playedMachines = [...user.playedMachines, {\n      machineId: +element.SK.split(\"#\")[1],\n      datePlayed: element.Date\n    }];\n  } else if (element.SK.startsWith(\"SCORE\")) {\n    if (user.scores === undefined) {\n      user.scores = [];\n    }\n\n    user.scores = [...user.scores, {\n      score: element.Score,\n      locationId: element.LocationId,\n      locationMachineXrefId: element.LocationMachineXrefId,\n      pinId: element.PinId,\n      date: element.Date,\n      s3RefId: element.S3RefId,\n      isVerified: element.IsVerified\n    }];\n  } else if (ROLES.contains(element.SK)) {\n    if (user.roles === undefined) {\n      user.roles = [];\n    }\n\n    user.roles = [...user.roles, {\n      role: element.SK,\n      dateAdded: element.Date\n    }];\n  }\n};\n\nexports.reduce = reduce;\n\n//# sourceURL=webpack:///./src/graphql/reducers/user.js?");

/***/ }),

/***/ "./src/graphql/resolvers/index.js":
/*!****************************************!*\
  !*** ./src/graphql/resolvers/index.js ***!
  \****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var merge_graphql_schemas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! merge-graphql-schemas */ \"merge-graphql-schemas\");\n/* harmony import */ var merge_graphql_schemas__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(merge_graphql_schemas__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _pinball__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./pinball */ \"./src/graphql/resolvers/pinball.js\");\n/* harmony import */ var _player__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./player */ \"./src/graphql/resolvers/player.js\");\n/* harmony import */ var _knocker__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./knocker */ \"./src/graphql/resolvers/knocker.js\");\n\n\nconst GMR = __webpack_require__(/*! graphql-merge-resolvers */ \"graphql-merge-resolvers\"); // Import module\n\n\n\n\n\n/*import scoreResolver from \"./score\"; */\n\n/* import machineResolver from \"./machine\";\nimport machineXrefResolver from \"./machine-xref\";\nimport machineConditionResolver from \"./machine-condition\";\nimport regionResolver from \"./region\";\nimport locationResolver from \"./location\";\nimport operatorResolver from \"./opera\"; */\n\nconst resolvers = [//playerResolver,\n_pinball__WEBPACK_IMPORTED_MODULE_1__[\"default\"]\n/*   playerResolver,\nscoreResolver */\n\n/* machineResolver,\nmachineXrefResolver,\nmachineConditionResolver,\nregionResolver,\nlocationResolver,\noperatorResolver */\n];\n/* harmony default export */ __webpack_exports__[\"default\"] = (_knocker__WEBPACK_IMPORTED_MODULE_3__[\"default\"]);\n/* const mainResolver = GMR.merge([playerResolver, pinballResolver]); \nexport default mainResolver; */\n\n//# sourceURL=webpack:///./src/graphql/resolvers/index.js?");

/***/ }),

/***/ "./src/graphql/resolvers/knocker.js":
/*!******************************************!*\
  !*** ./src/graphql/resolvers/knocker.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nconst {\n  v4\n} = __webpack_require__(/*! uuid */ \"uuid\");\n/**\n *\n *\n * Queries\n * ------- User ---------\n * - getUserById\n *   - In the GQL the user can specify: Favorite Games, IN\n * - getUserByUsername\n * - getAllUsers\n * - getRolesById\n * - getUsersByRoles\n *\n * ------ Scores --------\n * - getScoresByGameId\n * - getScoresByXrefId\n *\n * ------- Dates --------\n * - getEventsByDate\n *\n * ----- Favorites ------\n * - getFavoritedMachinesByPinId\n * - getFavoritedGamesByGameId\n *\n * ------ Machines ------\n * - getPinsPlayedByXref\n */\n\n/**\n *\n * Writes\n * ------- User ---------\n * - createUser\n * - addUserPermission\n * - addFavoriteGame\n * - addFavoriteMachine\n * - addFriend(s)\n * - addPlayedMachine\n *\n * ------ Scores --------\n * - addScore\n *\n */\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  Query: {\n    /**\n     *\n     * KnockerDB\n     *\n     */\n    // ------- User ---------\n    users: (_, __, {\n      dataSources\n    }) => dataSources.knockerDB.get(),\n    userById: async (source, {\n      id\n    }, {\n      dataSources\n    }, state) => dataSources.knockerDB.getUserById({\n      id: id\n    }),\n    userByUsername: async (source, args, {\n      dataSources\n    }, state) => dataSources.knockerDB.getUserByUsername({\n      username: username\n    }),\n    usersByRoles: async (source, args, {\n      dataSources\n    }, state) => {},\n    knockerScoresByGameId: async (source, {\n      gameId\n    }, {\n      dataSources\n    }, state) => dataSources.knockerDB.getScoresByGameId({\n      gameId: gameId\n    }),\n    knockerScoresByXrefId: async (source, {\n      locMachId\n    }, {\n      dataSources\n    }, state) => dataSources.knockerDB.getKnockerScoresByLocationMachineId({\n      locMachId: locMachId\n    }),\n    pmScoresByXrefId: async (source, {\n      locMachId\n    }, {\n      dataSources\n    }, state) => dataSources.pinballMachineAPI.getPMScoresByLocationMachineId({\n      locMachId: locMachId\n    }),\n    // ------- Dates --------\n\n    /* eventsByDate: async (source, { date }, { dataSources }, state) =>\n      dataSources.knockerDB.getEventsByDate({ date: date }),\n    */\n\n    /**\n     *\n     *\n     * PinballAPI\n     *\n     */\n    machines: (_, __, {\n      dataSources\n    }) => dataSources.pinballMachineAPI.getAllMachines(),\n\n    /* getAllHighScoresForARegion: (_, __, { dataSources }) =>\n      dataSources.pinballMachineAPI.getAllMachines(), */\n    locations: (_, {\n      region\n    }, {\n      dataSources\n    }) => dataSources.pinballMachineAPI.getLocations({\n      region: region\n    }),\n    locationsByRegion: (_, {\n      region\n    }, {\n      dataSources\n    }) => dataSources.pinballMachineAPI.getLocationsByRegion({\n      region: region\n    }),\n    regions: (_, __, {\n      dataSources\n    }) => dataSources.pinballMachineAPI.getAllRegions()\n    /* \n    allOps: (_, __, { dataSources }) =>\n      dataSources.pinballMachineAPI.getAllOperators(),\n     allRegions: (_, __, { dataSources }) =>\n      dataSources.pinballMachineAPI.getAllRegions(),\n     allLocations: (_, { region }, { dataSources }) =>\n      dataSources.pinballMachineAPI.getLocations({ region: region }),\n     getLocationsByRegion: (_, { region }, { dataSources }) =>\n      dataSources.pinballMachineAPI.getLocationsByRegion({ region: region }) */\n\n  },\n  Mutation: {\n    deleteUser: async (source, args, {\n      dataSources\n    }, state) => {\n      const {\n        id\n      } = args;\n      let result = {};\n\n      try {\n        await dataSources.knockerDB.delete(id);\n      } catch (e) {\n        console.error(e);\n        result.error = \"Internal error\";\n      }\n\n      return result;\n    },\n\n    /**\n     *\n     * Add a User Permission\n     *\n     */\n    addRole: async (source, args, {\n      dataSources\n    }, state) => {\n      try {\n        //console.log(dataSources);\n        result = await dataSources.knockerDB.addRole(args.role, args.username, args.userId);\n      } catch (e) {\n        console.error(e);\n        result.error = \"Internal error\";\n      } //console.log(\"addScore() - result\", result);\n\n\n      return result;\n    },\n\n    /***\n     * Add a recorded score\n     *\n     * @param {}\n     *\n     *\n     */\n    addScore: async (source, args, {\n      dataSources\n    }, state) => {\n      const {\n        data\n      } = args; //console.log(\"args:\", args);\n\n      let result = {};\n\n      try {\n        //console.log(dataSources);\n        result = await dataSources.knockerDB.createScore(args.data.score, args.data.gameId, args.data.locationId, args.data.locationMachineXrefId, args.username, args.userId);\n      } catch (e) {\n        console.error(e);\n        result.error = \"Internal error\";\n      } //console.log(\"addScore() - result\", result);\n\n\n      return result;\n    },\n    addFriend: async (source, args, {\n      dataSources\n    }, state) => {\n      let result = {};\n\n      try {\n        //console.log(dataSources);\n        result = await dataSources.knockerDB.createScore(args.data.username, args.data.uid, args.userId);\n      } catch (e) {\n        console.error(e);\n        result.error = \"Internal error\";\n      } //console.log(\"addScore() - result\", result);\n\n\n      return result;\n    },\n\n    /**\n     *\n     * Add a favorite game\n     *\n     */\n    addFavoriteGame: async (source, args, {\n      dataSources\n    }, state) => {\n      let result = {};\n\n      try {\n        //console.log(dataSources);\n        result = await dataSources.knockerDB.createScore(args.data.gameId, args.username, args.userId);\n      } catch (e) {\n        console.error(e);\n        result.error = \"Internal error\";\n      } //console.log(\"addScore() - result\", result);\n\n\n      return result;\n    },\n\n    /**\n     *\n     * Add a favorite Machine\n     *\n     */\n    addFavoriteMachine: async (source, args, {\n      dataSources\n    }, state) => {\n      let result = {};\n\n      try {\n        //console.log(dataSources);\n        result = await dataSources.knockerDB.createScore(args.data.locationMachineXrefId, args.username, args.userId);\n      } catch (e) {\n        console.error(e);\n        result.error = \"Internal error\";\n      } //console.log(\"addScore() - result\", result);\n\n\n      return result;\n    },\n\n    /**\n     *\n     *\n     *\n     */\n    addPlayedMachine: async (source, args, {\n      dataSources\n    }, state) => {\n      const {\n        data\n      } = args;\n      let result = {};\n\n      try {\n        //console.log(dataSources);\n        result = await dataSources.knockerDB.addPlayedMachine(args.data.locationMachineXrefId, args.userId);\n      } catch (e) {\n        console.error(e);\n        result.error = \"Internal error\";\n      } //console.log(\"addScore() - result\", result);\n\n\n      return result;\n    },\n    addVisitedLocation: async (source, args, {\n      dataSources\n    }, state) => {\n      const {\n        data\n      } = args;\n      let result = {};\n\n      try {\n        //console.log(dataSources);\n        result = await dataSources.knockerDB.addVisitedLocation(args.data.locationId, args.username, args.userId);\n      } catch (e) {\n        console.error(e);\n        result.error = \"Internal error\";\n      } //console.log(\"addScore() - result\", result);\n\n\n      return result;\n    }\n  }\n});\n\n//# sourceURL=webpack:///./src/graphql/resolvers/knocker.js?");

/***/ }),

/***/ "./src/graphql/resolvers/pinball.js":
/*!******************************************!*\
  !*** ./src/graphql/resolvers/pinball.js ***!
  \******************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  Query: {\n    machines: (_, __, {\n      dataSources\n    }) => {\n      //console.log(dataSources);\n      dataSources.pinballMachineAPI.getAllMachines();\n    }\n    /* \n    allOps: (_, __, { dataSources }) =>\n      dataSources.pinballMachineAPI.getAllOperators(),\n     allRegions: (_, __, { dataSources }) =>\n      dataSources.pinballMachineAPI.getAllRegions(),\n     allLocations: (_, { region }, { dataSources }) =>\n      dataSources.pinballMachineAPI.getLocations({ region: region }),\n     getLocationsByRegion: (_, { region }, { dataSources }) =>\n      dataSources.pinballMachineAPI.getLocationsByRegion({ region: region }) */\n\n  }\n});\n\n//# sourceURL=webpack:///./src/graphql/resolvers/pinball.js?");

/***/ }),

/***/ "./src/graphql/resolvers/player.js":
/*!*****************************************!*\
  !*** ./src/graphql/resolvers/player.js ***!
  \*****************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n  Query: {\n    players: (_, __, {\n      dataSources\n    }) => dataSources.knockerDB.get(),\n    machines: (_, __, {\n      dataSources\n    }) => dataSources.pinballMachineAPI.getAllMachines()\n  },\n  Mutation: {\n    putPlayer: async (source, args, {\n      dataSources\n    }, state) => {\n      try {\n        const {\n          data\n        } = args; //console.log(dataSources);\n        //console.log(\"FINAL RESULT: \" + result);\n\n        return dataSources.knockerDB.put(data);\n      } catch (e) {\n        console.error(\"player.js - CAUGHT ERROR \" + e);\n        throw new Error(\"Error: \" + e);\n      }\n    },\n    deletePlayer: async (source, args, {\n      dataSources\n    }, state) => {\n      const {\n        id\n      } = args;\n      let result = {};\n\n      try {\n        await dataSources.knockerDB.delete(id);\n      } catch (e) {\n        console.error(e);\n        result.error = \"Internal error\";\n      }\n\n      return result;\n    }\n  }\n});\n\n//# sourceURL=webpack:///./src/graphql/resolvers/player.js?");

/***/ }),

/***/ "./src/graphql/types/index.js":
/*!************************************!*\
  !*** ./src/graphql/types/index.js ***!
  \************************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var merge_graphql_schemas__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! merge-graphql-schemas */ \"merge-graphql-schemas\");\n/* harmony import */ var merge_graphql_schemas__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(merge_graphql_schemas__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _machine_graphql__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./machine.graphql */ \"./src/graphql/types/machine.graphql\");\n/* harmony import */ var _machine_graphql__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(_machine_graphql__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var _machine_xref_graphql__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./machine-xref.graphql */ \"./src/graphql/types/machine-xref.graphql\");\n/* harmony import */ var _machine_xref_graphql__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(_machine_xref_graphql__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var _machine_condition_graphql__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./machine-condition.graphql */ \"./src/graphql/types/machine-condition.graphql\");\n/* harmony import */ var _machine_condition_graphql__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(_machine_condition_graphql__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var _region_graphql__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./region.graphql */ \"./src/graphql/types/region.graphql\");\n/* harmony import */ var _region_graphql__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(_region_graphql__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var _location_graphql__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./location.graphql */ \"./src/graphql/types/location.graphql\");\n/* harmony import */ var _location_graphql__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_location_graphql__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var _operator_graphql__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./operator.graphql */ \"./src/graphql/types/operator.graphql\");\n/* harmony import */ var _operator_graphql__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(_operator_graphql__WEBPACK_IMPORTED_MODULE_6__);\n/* harmony import */ var _util_graphql__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./util.graphql */ \"./src/graphql/types/util.graphql\");\n/* harmony import */ var _util_graphql__WEBPACK_IMPORTED_MODULE_7___default = /*#__PURE__*/__webpack_require__.n(_util_graphql__WEBPACK_IMPORTED_MODULE_7__);\n/* harmony import */ var _player_graphql__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./player.graphql */ \"./src/graphql/types/player.graphql\");\n/* harmony import */ var _player_graphql__WEBPACK_IMPORTED_MODULE_8___default = /*#__PURE__*/__webpack_require__.n(_player_graphql__WEBPACK_IMPORTED_MODULE_8__);\n\n\n\n\n\n\n\n\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Object(merge_graphql_schemas__WEBPACK_IMPORTED_MODULE_0__[\"mergeTypes\"])([_machine_graphql__WEBPACK_IMPORTED_MODULE_1___default.a, _machine_xref_graphql__WEBPACK_IMPORTED_MODULE_2___default.a, _machine_condition_graphql__WEBPACK_IMPORTED_MODULE_3___default.a, _region_graphql__WEBPACK_IMPORTED_MODULE_4___default.a, _location_graphql__WEBPACK_IMPORTED_MODULE_5___default.a, _operator_graphql__WEBPACK_IMPORTED_MODULE_6___default.a, _util_graphql__WEBPACK_IMPORTED_MODULE_7___default.a, _player_graphql__WEBPACK_IMPORTED_MODULE_8___default.a], {\n  all: true\n}));\n\n//# sourceURL=webpack:///./src/graphql/types/index.js?");

/***/ }),

/***/ "./src/graphql/types/location.graphql":
/*!********************************************!*\
  !*** ./src/graphql/types/location.graphql ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Location\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"street\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"city\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"state\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"zip\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"phone\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"lat\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"lon\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"website\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"created_at\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"updated_at\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"zone_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"region_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"location_type_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"description\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"operator_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"date_last_updated\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"last_updated_by_user_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"is_stern_army\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"country\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"distance\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"bearing\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"num_machines\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"location_machine_xrefs\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MachineXref\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"machine_names\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locations\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"region\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Location\"}}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locationsByRegion\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"region\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Location\"}}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"location\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Location\"}}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":676}};\n    doc.loc.source = {\"body\":\"type Location {\\n  id: Int\\n  name: String\\n  street: String\\n  city: String\\n  state: String\\n  zip: String\\n  phone: String\\n  lat: String\\n  lon: String\\n  website: String\\n  created_at: String\\n  updated_at: String\\n  zone_id: Int\\n  region_id: Int\\n  location_type_id: Int\\n  description: String\\n  operator_id: String\\n  date_last_updated: String\\n  last_updated_by_user_id: Int\\n  is_stern_army: Boolean\\n  country: String\\n  distance: Float\\n  bearing: String\\n  num_machines: Int\\n  location_machine_xrefs: [MachineXref]\\n  machine_names: [String]\\n}\\n\\ntype Query {\\n  locations(region: String!): [Location]!\\n  locationsByRegion(region: String!): [Location]!\\n  location(id: String!): Location!\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n//# sourceURL=webpack:///./src/graphql/types/location.graphql?");

/***/ }),

/***/ "./src/graphql/types/machine-condition.graphql":
/*!*****************************************************!*\
  !*** ./src/graphql/types/machine-condition.graphql ***!
  \*****************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"MachineCondition\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"comment\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"location_machine_xref_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"created_at\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"updated_at\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"user_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":162}};\n    doc.loc.source = {\"body\":\"type MachineCondition {\\n  id: Int\\n  comment: String\\n  location_machine_xref_id: Int\\n  created_at: String\\n  updated_at: String\\n  user_id: Int\\n  username: String\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n//# sourceURL=webpack:///./src/graphql/types/machine-condition.graphql?");

/***/ }),

/***/ "./src/graphql/types/machine-xref.graphql":
/*!************************************************!*\
  !*** ./src/graphql/types/machine-xref.graphql ***!
  \************************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"MachineXref\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"created_at\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"updated_at\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"location_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"machine_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"condition\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"condition_date\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"user_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"machine_score_xrefs_count\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"last_updated_by_username\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"machine_conditions\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MachineCondition\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"machineXrefs\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MachineXref\"}}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"machineXref\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"MachineXref\"}}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":367}};\n    doc.loc.source = {\"body\":\"type MachineXref {\\n  id: Int\\n  created_at: String\\n  updated_at: String\\n  location_id: Int\\n  machine_id: Int\\n  condition: String\\n  condition_date: String\\n  user_id: Int\\n  machine_score_xrefs_count: Int\\n  last_updated_by_username: String\\n  machine_conditions: [MachineCondition]\\n}\\n\\ntype Query {\\n  machineXrefs: [MachineXref]!\\n  machineXref(id: String!): MachineXref!\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n//# sourceURL=webpack:///./src/graphql/types/machine-xref.graphql?");

/***/ }),

/***/ "./src/graphql/types/machine.graphql":
/*!*******************************************!*\
  !*** ./src/graphql/types/machine.graphql ***!
  \*******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Machine\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"created_at\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"updated_at\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ipdb_link\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"manufacturer\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"machine_group_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ipdb_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"opdb_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"InputObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"MachineInput\"},\"directives\":[],\"fields\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"is_active\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"created_at\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"updated_at\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ipdb_link\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"year\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"manufacturer\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"machine_group_id\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ipdb_id\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"opdb_id\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"machines\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Machine\"}}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"machineById\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Machine\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"machineByName\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Machine\"}}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":634}};\n    doc.loc.source = {\"body\":\"#These are the canonical machine descriptions, not the location-centric ones\\ntype Machine {\\n  id: Int!\\n  name: String\\n  is_active: String\\n  created_at: String\\n  updated_at: String\\n  ipdb_link: String\\n  year: Int\\n  manufacturer: String\\n  machine_group_id: Int\\n  ipdb_id: Int\\n  opdb_id: String\\n}\\ninput MachineInput {\\n  id: Int!\\n  name: String\\n  is_active: String\\n  created_at: String\\n  updated_at: String\\n  ipdb_link: String\\n  year: Int\\n  manufacturer: String\\n  machine_group_id: Int\\n  ipdb_id: Int\\n  opdb_id: String\\n}\\n\\ntype Query {\\n  machines: [Machine]!\\n  machineById(id: String!): Machine!\\n  machineByName(name: String!): Machine!\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n//# sourceURL=webpack:///./src/graphql/types/machine.graphql?");

/***/ }),

/***/ "./src/graphql/types/operator.graphql":
/*!********************************************!*\
  !*** ./src/graphql/types/operator.graphql ***!
  \********************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Operator\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"region_id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"website\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"phone\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"created_at\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"updated_at\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":152}};\n    doc.loc.source = {\"body\":\"type Operator {\\n  id: Int\\n  name: String\\n  region_id: Int\\n  email: String\\n  website: String\\n  phone: String\\n  created_at: String\\n  updated_at: String\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n//# sourceURL=webpack:///./src/graphql/types/operator.graphql?");

/***/ }),

/***/ "./src/graphql/types/player.graphql":
/*!******************************************!*\
  !*** ./src/graphql/types/player.graphql ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"location\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"roles\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"playedMachines\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PlayedMachine\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"scores\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Score\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"visitedLocations\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"VisitedLocation\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"favoriteMachines\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FavoriteMachine\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"favoriteGames\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FavoriteGame\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"email\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PinballAPIScore\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"location_machine_xref_id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"score\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"created_at\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"updated_at\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"user_id\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Score\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"score\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"pinId\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locationId\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locationMachineXrefId\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"date\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"s3RefId\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"isVerified\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"InputObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"ScoreInput\"},\"directives\":[],\"fields\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"score\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locationMachineXrefId\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"pinId\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locationId\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"s3RefId\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"isVerified\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PlayedMachine\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locationMachineXrefId\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"date\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"InputObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"PlayedMachineInput\"},\"directives\":[],\"fields\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locationMachineXrefId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"VisitedLocation\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locationId\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"dateVisited\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"InputObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"VisitedLocationInput\"},\"directives\":[],\"fields\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locationId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FavoriteGame\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"gameId\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"InputObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FavoriteGameInput\"},\"directives\":[],\"fields\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"gameId\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FavoriteMachine\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locationMachineXrefId\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"InputObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FavoriteMachineInput\"},\"directives\":[],\"fields\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locationMachineXrefId\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Friend\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"uid\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"dateAdded\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"InputObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"FriendInput\"},\"directives\":[],\"fields\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"uid\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"users\"},\"arguments\":[],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"usersByRoles\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"role\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userById\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userByUsername\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"User\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"knockerScoresByGameId\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"gameId\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Score\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"knockerScoresByXrefId\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locationMachineXrefId\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Score\"}}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"pmScoresByXrefId\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"locationMachineXrefId\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}],\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PinballAPIScore\"}}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Mutation\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"addScore\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ScoreInput\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Score\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"addRole\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"role\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"addFriend\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FriendInput\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Friend\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"addPlayedMachine\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PlayedMachineInput\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"PlayedMachine\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"addVisitedLocation\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"username\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"VisitedLocationInput\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"VisitedLocation\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"addFavoriteGame\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FavoriteGameInput\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"addFavoriteMachine\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"userId\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"ID\"}}},\"directives\":[]},{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"data\"},\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"FavoriteMachineInput\"}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Boolean\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"deleteUser\"},\"arguments\":[{\"kind\":\"InputValueDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}}},\"directives\":[]}],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Result\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":2274}};\n    doc.loc.source = {\"body\":\"type User {\\n  id: ID\\n  username: String\\n  name: String\\n  location: String\\n  roles: [String]\\n  playedMachines: [PlayedMachine]\\n  scores: [Score]\\n  visitedLocations: [VisitedLocation]\\n  favoriteMachines: [FavoriteMachine]\\n  favoriteGames: [FavoriteGame]\\n  email: String\\n}\\n\\ntype PinballAPIScore {\\n  id: String!\\n  location_machine_xref_id: String!\\n  score: String!\\n  created_at: String!\\n  updated_at: String!\\n  user_id: String!\\n  username: String!\\n}\\ntype Score {\\n  score: String!\\n  pinId: String\\n  locationId: String\\n  locationMachineXrefId: String\\n  date: String\\n  s3RefId: String\\n  isVerified: String\\n}\\ninput ScoreInput {\\n  score: String\\n  locationMachineXrefId: String\\n  pinId: String\\n  locationId: Int\\n  s3RefId: String\\n  isVerified: Boolean\\n}\\n\\ntype PlayedMachine {\\n  locationMachineXrefId: String!\\n  date: String\\n}\\n\\ninput PlayedMachineInput {\\n  locationMachineXrefId: String!\\n}\\n\\ntype VisitedLocation {\\n  locationId: String!\\n  dateVisited: String\\n}\\n\\ninput VisitedLocationInput {\\n  locationId: String!\\n}\\n\\ntype FavoriteGame {\\n  gameId: String\\n  username: String\\n}\\n\\ninput FavoriteGameInput {\\n  gameId: String\\n}\\n\\ntype FavoriteMachine {\\n  locationMachineXrefId: String\\n}\\n\\ninput FavoriteMachineInput {\\n  locationMachineXrefId: String\\n}\\n\\ntype Friend {\\n  username: String\\n  uid: String\\n  dateAdded: String\\n}\\ninput FriendInput {\\n  uid: String\\n  username: String\\n}\\n\\ntype Query {\\n  users: [User]\\n  usersByRoles(role: String!): [User]\\n  userById(id: String!): User!\\n  userByUsername(username: String!): User!\\n  knockerScoresByGameId(gameId: String): [Score]\\n  knockerScoresByXrefId(locationMachineXrefId: String): [Score]\\n  pmScoresByXrefId(locationMachineXrefId: String): [PinballAPIScore]\\n}\\n\\ntype Mutation {\\n  addScore(userId: ID!, username: String, data: ScoreInput!): Score\\n  addRole(userId: ID!, username: String, role: String!): Boolean\\n  addFriend(userId: ID!, data: FriendInput!): Friend\\n  addPlayedMachine(\\n    userId: ID!\\n    username: String\\n    data: PlayedMachineInput!\\n  ): PlayedMachine\\n  addVisitedLocation(\\n    userId: ID!\\n    username: String\\n    data: VisitedLocationInput!\\n  ): VisitedLocation\\n  addFavoriteGame(userId: ID!, data: FavoriteGameInput): Boolean\\n  addFavoriteMachine(userId: ID!, data: FavoriteMachineInput): Boolean\\n  deleteUser(id: String!): Result\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n//# sourceURL=webpack:///./src/graphql/types/player.graphql?");

/***/ }),

/***/ "./src/graphql/types/region.graphql":
/*!******************************************!*\
  !*** ./src/graphql/types/region.graphql ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Region\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"id\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Int\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"created_at\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"updated_at\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"full_name\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"motd\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"lat\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"lon\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"state\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]},{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"effective_radius\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Float\"}},\"directives\":[]}]},{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Query\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"regions\"},\"arguments\":[],\"type\":{\"kind\":\"NonNullType\",\"type\":{\"kind\":\"ListType\",\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"Region\"}}}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":225}};\n    doc.loc.source = {\"body\":\"type Region {\\n  id: Int\\n  name: String\\n  created_at: String\\n  updated_at: String\\n  full_name: String\\n  motd: String\\n  lat: String\\n  lon: String\\n  state: String\\n  effective_radius: Float\\n}\\n\\ntype Query {\\n  regions: [Region]!\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n//# sourceURL=webpack:///./src/graphql/types/region.graphql?");

/***/ }),

/***/ "./src/graphql/types/util.graphql":
/*!****************************************!*\
  !*** ./src/graphql/types/util.graphql ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("\n    var doc = {\"kind\":\"Document\",\"definitions\":[{\"kind\":\"ObjectTypeDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"Result\"},\"interfaces\":[],\"directives\":[],\"fields\":[{\"kind\":\"FieldDefinition\",\"name\":{\"kind\":\"Name\",\"value\":\"error\"},\"arguments\":[],\"type\":{\"kind\":\"NamedType\",\"name\":{\"kind\":\"Name\",\"value\":\"String\"}},\"directives\":[]}]}],\"loc\":{\"start\":0,\"end\":32}};\n    doc.loc.source = {\"body\":\"type Result {\\n  error: String\\n}\\n\",\"name\":\"GraphQL request\",\"locationOffset\":{\"line\":1,\"column\":1}};\n  \n\n    var names = {};\n    function unique(defs) {\n      return defs.filter(\n        function(def) {\n          if (def.kind !== 'FragmentDefinition') return true;\n          var name = def.name.value\n          if (names[name]) {\n            return false;\n          } else {\n            names[name] = true;\n            return true;\n          }\n        }\n      )\n    }\n  \n\n      module.exports = doc;\n    \n\n\n//# sourceURL=webpack:///./src/graphql/types/util.graphql?");

/***/ }),

/***/ "apollo-datasource-rest":
/*!*****************************************!*\
  !*** external "apollo-datasource-rest" ***!
  \*****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"apollo-datasource-rest\");\n\n//# sourceURL=webpack:///external_%22apollo-datasource-rest%22?");

/***/ }),

/***/ "apollo-server-lambda":
/*!***************************************!*\
  !*** external "apollo-server-lambda" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"apollo-server-lambda\");\n\n//# sourceURL=webpack:///external_%22apollo-server-lambda%22?");

/***/ }),

/***/ "aws-sdk":
/*!**************************!*\
  !*** external "aws-sdk" ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"aws-sdk\");\n\n//# sourceURL=webpack:///external_%22aws-sdk%22?");

/***/ }),

/***/ "crypto":
/*!*************************!*\
  !*** external "crypto" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"crypto\");\n\n//# sourceURL=webpack:///external_%22crypto%22?");

/***/ }),

/***/ "crypto-random-string":
/*!***************************************!*\
  !*** external "crypto-random-string" ***!
  \***************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"crypto-random-string\");\n\n//# sourceURL=webpack:///external_%22crypto-random-string%22?");

/***/ }),

/***/ "graphql-merge-resolvers":
/*!******************************************!*\
  !*** external "graphql-merge-resolvers" ***!
  \******************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"graphql-merge-resolvers\");\n\n//# sourceURL=webpack:///external_%22graphql-merge-resolvers%22?");

/***/ }),

/***/ "merge-graphql-schemas":
/*!****************************************!*\
  !*** external "merge-graphql-schemas" ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"merge-graphql-schemas\");\n\n//# sourceURL=webpack:///external_%22merge-graphql-schemas%22?");

/***/ }),

/***/ "moment":
/*!*************************!*\
  !*** external "moment" ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"moment\");\n\n//# sourceURL=webpack:///external_%22moment%22?");

/***/ }),

/***/ "uuid":
/*!***********************!*\
  !*** external "uuid" ***!
  \***********************/
/*! no static exports found */
/***/ (function(module, exports) {

eval("module.exports = require(\"uuid\");\n\n//# sourceURL=webpack:///external_%22uuid%22?");

/***/ })

/******/ })));