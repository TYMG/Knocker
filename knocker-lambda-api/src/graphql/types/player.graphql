type Player {
  id: ID
  username: String
  name: String
  machinesPlayed: [Machine]
  scores: [Score]
  locationsVisited: [Location]
  email: String
}

type Score {
  id: ID!
  score: String!
  machineId: String
  machineName: String
  locationId: String
  date: String! #Should be a Timestramp converted to a String
}
input ScoreInput {
  score: String
  machineId: Int
  machineName: String
  locationId: Int
}

type Query {
  players: [Player]
  player(id: String!): Player!
  player(username: String!): Player!
}

input PlayerInput {
  username: String!
  name: String!
  email: String!
}

type Mutation {
  putPlayer(data: PlayerInput!): Player
  addScore(userId: ID!, data: ScoreInput!): Score
  addScores(userId: ID!, data: [ScoreInput]!): [Score]
  deletePlayer(id: String!): Result
}
