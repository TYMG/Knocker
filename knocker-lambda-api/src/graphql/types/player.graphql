type User {
  id: ID
  username: String
  name: String
  location: String
  roles: [String]
  playedMachines: [PlayedMachine]
  scores: [Score]
  visitedLocations: [VisitedLocation]
  favoriteMachines: [FavoriteMachine]
  favoriteGames: [FavoriteGame]
  email: String
}

type RoleUser {
  id: String
  username: String
  dateAdded: String
}

type PinballAPIScore {
  id: String!
  location_machine_xref_id: String!
  score: String!
  created_at: String!
  updated_at: String!
  user_id: String!
  username: String!
}
type Score {
  score: String!
  pinId: String
  locationId: String
  locationMachineXrefId: String
  date: String
  s3RefId: String
  isVerified: String
}
input ScoreInput {
  score: String
  locationMachineXrefId: String
  pinId: String
  locationId: Int
  s3RefId: String
  isVerified: Boolean
}

type PlayedMachine {
  locationMachineXrefId: String!
  date: String
}

input PlayedMachineInput {
  locationMachineXrefId: String!
}

type VisitedLocation {
  locationId: String!
  dateVisited: String
}

input VisitedLocationInput {
  locationId: String!
}

type FavoriteGame {
  gameId: String
  username: String
}

input FavoriteGameInput {
  gameId: String
}

type FavoriteMachine {
  locationMachineXrefId: String
}

input FavoriteMachineInput {
  locationMachineXrefId: String
}

type Friend {
  username: String
  uid: String
  dateAdded: String
}
input FriendInput {
  uid: String
  username: String
}

type Query {
  users: [User]
  usersByRoles(role: String!): [RoleUser]
  userById(id: String!): User!
  userByUsername(username: String!): User!
  knockerScoresByGameId(gameId: String): [Score]
  knockerScoresByXrefId(locationMachineXrefId: String): [Score]
  pmScoresByXrefId(locationMachineXrefId: String): [PinballAPIScore]
}

type Mutation {
  addScore(userId: ID!, username: String, data: ScoreInput!): Score
  addRole(userId: ID!, username: String, role: String!): Boolean
  addFriend(userId: ID!, data: FriendInput!): Friend
  addPlayedMachine(
    userId: ID!
    username: String
    data: PlayedMachineInput!
  ): PlayedMachine
  addVisitedLocation(
    userId: ID!
    username: String
    data: VisitedLocationInput!
  ): VisitedLocation
  addFavoriteGame(userId: ID!, data: FavoriteGameInput): Boolean
  addFavoriteMachine(userId: ID!, data: FavoriteMachineInput): Boolean
  deleteUser(id: String!): Result
}
